%% @doc To enable Riak Json set this 'on'.
%% @datatype enum on, off
{mapping, "riak_json", "riak_json.enabled", [
  {default, on},
  {datatype, {enum, [on, off]}}
]}.

{ translation,
  "riak_json.enabled",
  fun(Conf) ->
          Setting = cuttlefish_util:conf_get_value("riak_json", Conf),
          case Setting of
              on -> true;
              off -> false;
              _Default -> false
          end
  end}.

%% @doc document_name is the first part of all URLS used by Json Document HTTP endpoints.
%% @datatype string
{mapping, "riak_json.document_name", "riak_json.document_name", [
  {default, "document"}
]}.

%% @doc To enable Schema Inferring set this 'on'.
%% @datatype enum on, off
{mapping, "riak_json.infer_schemas", "riak_json.infer_schemas", [
  {default, on},
  {datatype, {enum, [on, off]}}
]}.

{ translation,
  "riak_json.infer_schemas",
  fun(Conf) ->
          Setting = cuttlefish_util:conf_get_value("riak_json.infer_schemas", Conf),
          case Setting of
              on -> true;
              off -> false;
              _Default -> false
          end
  end}.

%% @doc To bypass RiakJson authentication set this 'on'.
%% @datatype enum on, off
{mapping, "riak_json.auth.bypass", "riak_json.auth.bypass", [
  {default, on},
  {datatype, {enum, [on, off]}}
]}.

{ translation,
  "riak_json.auth.bypass",
  fun(Conf) ->
          Setting = cuttlefish_util:conf_get_value("riak_json.auth.bypass", Conf),
          case Setting of
              on -> true;
              off -> false;
              _Default -> true
          end
  end}.

%% @doc Authentication module.
%% @datatype enum rj_keystone_auth
{mapping, "riak_json.auth.module", "riak_json.auth.module", [
  {default, rj_keystone_auth},
  {datatype, {enum, [rj_keystone_auth]}}
]}.

%% @doc Keystone auth URL.
%% @datatype string
{mapping, "riak_json.auth.rj_keystone_auth.auth_url", "riak_json.auth.rj_keystone_auth.auth_url", [
  {default, "http://127.0.0.1:5000/v2.0"}
]}.

%% @doc Keystone tokens resource.
%% @datatype string
{mapping, "riak_json.auth.rj_keystone_auth.tokens_resource", "riak_json.auth.rj_keystone_auth.tokens_resource", [
  {default, "tokens"}
]}.

%% @doc Keystone tenant.
%% @datatype string
{mapping, "riak_json.auth.rj_keystone_auth.tenant", "riak_json.auth.rj_keystone_auth.tenant", [
  {default, "riak_json"}
]}.

{ translation,
  "riak_json.auth.rj_keystone_auth.tenant",
  fun(Conf) ->
          Setting = cuttlefish_util:conf_get_value("riak_json.auth.rj_keystone_auth.tenant", Conf),
          list_to_binary(Setting)
  end}.

%% @doc Keystone admin username.
%% @datatype string
{mapping, "riak_json.auth.rj_keystone_auth.admin_username", "riak_json.auth.rj_keystone_auth.admin_username", [
  {default, "riak_json_admin"}
]}.

{ translation,
  "riak_json.auth.rj_keystone_auth.admin_username",
  fun(Conf) ->
          Setting = cuttlefish_util:conf_get_value("riak_json.auth.rj_keystone_auth.admin_username", Conf),
          list_to_binary(Setting)
  end}.

%% @doc Keystone admin password.
%% @datatype string
{mapping, "riak_json.auth.rj_keystone_auth.admin_password", "riak_json.auth.rj_keystone_auth.admin_password", [
  {default, "riak_json_admin"}
]}.

{ translation,
  "riak_json.auth.rj_keystone_auth.admin_password",
  fun(Conf) ->
          Setting = cuttlefish_util:conf_get_value("riak_json.auth.rj_keystone_auth.admin_password", Conf),
          list_to_binary(Setting)
  end}.

%% @doc Keystone permitted roles, multiple values separated by comma
%% @datatype string
{mapping, "riak_json.auth.rj_keystone_auth.permitted_roles", "riak_json.auth.rj_keystone_auth.permitted_roles", [
  {default, "riak_json"}
]}.

{ translation,
  "riak_json.auth.rj_keystone_auth.permitted_roles",
  fun(Conf) ->
          Setting = cuttlefish_util:conf_get_value("riak_json.auth.rj_keystone_auth.permitted_roles", Conf),
          lists:map(fun(A) -> list_to_binary(A) end, string:tokens(Setting, ","))
  end}.